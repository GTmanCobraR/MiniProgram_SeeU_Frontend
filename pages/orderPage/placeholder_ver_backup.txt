<template>
	<view class="container">
		<!-- Orders List (Scrollable) -->
		<scroll-view class="card-list" scroll-y @scrolltolower="loadMoreOrders">
			<card v-for="(order, index) in orders" :key="index" :title="'订单号: ' + order.id"
				:mainMessage="'类型: ' + order.orderType + ' | 状态: ' + order.status + ' | 总金额: ¥' + order.total"
				:timeMessage="order.date" :type="order.orderType" :url="order.url" />

			<!-- Loading and End of Data Messages -->
			<view v-if="loading" class="loading">加载中...</view>
			<view v-if="allLoaded" class="end-of-data">已加载全部订单</view>
			<view style="height: 20px;"></view>
		</scroll-view>
	</view>
</template>

<script>
	import card from '/components/orderComponents/orderCard.vue';

	export default {
		components: {
			card,
		},
		data() {
			return {
				orders: [], // List of orders to display
				pageNum: 1, // Current page number for pagination
				pageSize: 10, // Number of orders per page
				loading: false, // Loading state
				allLoaded: false, // All data loaded state
			};
		},
		methods: {
			fetchOrders(pageNum, pageSize) {
				this.loading = true;
				setTimeout(() => {
					const fetchedOrders = this.getPlaceholderOrders(pageNum, pageSize);
					if (fetchedOrders.length < pageSize) {
						this.allLoaded = true;
					}
					this.orders = [...this.orders, ...fetchedOrders];
					this.loading = false;
				}, 1000);
			},
			getPlaceholderOrders(pageNum, pageSize) {
				const orderTypes = ['面经', '案例', '课程'];
				const orders = [];
				for (let i = 1; i <= pageSize; i++) {
					const orderType = orderTypes[Math.floor(Math.random() * 3)];
					orders.push({
						id: `ORD-${pageNum}-${i}`,
						date: `2024-08-${(pageNum * pageSize + i) % 30 + 1}`,
						status: ['待付款', '已付款', '已退款'][Math.floor(Math.random() * 3)],
						total: (Math.random() * 1000).toFixed(2),
						orderType: orderType,
					});
				}
				return orders;
			},
			loadMoreOrders() {
				if (this.allLoaded || this.loading) return;
				this.pageNum += 1;
				this.fetchOrders(this.pageNum, this.pageSize);
			},
		},
		mounted() {
			this.fetchOrders(this.pageNum, this.pageSize);
		},
	};
</script>

<style>
	.container {
		display: flex;
		flex-direction: column;
		align-items: center;
		padding-top: 20px;
		height: 100vh;
		overflow: hidden;
		background-color: #f2f3f5;
	}

	.card-list {
		height: 100%;
		overflow-y: scroll;
		width: 100%;
	}

	.loading,
	.end-of-data {
		text-align: center;
		padding: 10px;
		color: #888;
	}
</style>